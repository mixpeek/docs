{
  "name": "Mixpeek",
  "layout": "sidenav",
  "favicon": "/favicon.png",
  "openapi": "https://api.mixpeek.com/docs/openapi.json",
  "logo": {
    "dark": "/logo/dark.png",
    "light": "/logo/light.png"
  },
  "api": {
    "baseUrl": [
      "https://api.mixpeek.com"
    ],
    "auth": {
      "method": "bearer",
      "name": "Authorization"
    }
  },
  "colors": {
    "primary": "#FC5185",
    "light": "#FFA0BD",
    "dark": "#364F6B",
    "ultraLight": "#ECD3DF",
    "ultraDark": "#18283A",
    "background": {
      "dark": "#121212"
    }
  },
  "feedback": {
    "thumbsRating": true,
    "suggestEdit": true,
    "raiseIssue": true
  },
  "topbarLinks": [
    {
      "name": "Talk to Engineers",
      "url": "https://mixpeek.com/contact"
    }
  ],
  "topbarCtaButton": {
    "name": "Use Mixpeek",
    "url": "https://mixpeek.com/start"
  },
  "anchors": [
    {
      "name": "Homepage",
      "icon": "link",
      "url": "https://mixpeek.com"
    },
    {
      "name": "Engineering Blog",
      "icon": "book-open",
      "url": "https://mixpeek.com/blog"
    },
    {
      "name": "Multimodal University",
      "icon": "graduation-cap",
      "url": "https://mixpeek.com/learn"
    },
    {
      "name": "Community",
      "icon": "users",
      "url": "https://mixpeek.com/community"
    }
  ],
  "primaryTab": {
    "name": "Documentation"
  },
  "versions": [
    {
      "name": "v1",
      "default": true
    }
  ],
  "tabs": [
    {
      "name": "API Reference",
      "url": "api-reference"
    },
    {
      "name": "Integrations",
      "url": "integrations"
    },
    {
      "name": "Changelog",
      "url": "changelog"
    }
  ],
  "navigation": [
    {
      "group": "Getting Started",
      "pages": [
        "overview/introduction",
        "overview/quickstart",
        "overview/benefits",
        "overview/limits"
      ]
    },
    {
      "group": "Core Concepts",
      "pages": [
        "concepts/overview",
        "concepts/collections",
        "concepts/namespaces",
        "concepts/assets",
        "concepts/tasks"
      ]
    },
    {
      "group": "Data Pipeline",
      "pages": [
        "ingestion/extractors",
        "entities/taxonomies",
        "entities/clusters"
      ]
    },
    {
      "group": "Models & Processing",
      "pages": [
        "models/available-models",
        "models/embedding-storage",
        "models/fine-tuning"
      ]
    },
    {
      "group": "Search & Retrieval",
      "pages": [
        "search/queries",
        "search/filters",
        "search/group",
        "search/rerank"
      ]
    },
    {
      "group": "Databases",
      "pages": [
        "integrations/databases/timescale",
        "integrations/databases/mongodb",
        "integrations/databases/supabase",
        "integrations/databases/postgresql",
        "integrations/databases/pinecone",
        "integrations/databases/weaviate",
        "integrations/databases/qdrant",
        "integrations/databases/redis"
      ]
    },
    {
      "group": "Health",
      "pages": [
        "api-reference/health/healthcheck"
      ]
    },
    {
      "group": "Features",
      "pages": [
        "api-reference/feature-search/search-features",
        "api-reference/features/get-feature",
        "api-reference/features/full-feature-update",
        "api-reference/features/delete-feature",
        "api-reference/features/list-features"
      ]
    },
    {
      "group": "Ingest Assets",
      "pages": [
        "api-reference/ingest-assets/ingest-text",
        "api-reference/ingest-assets/ingest-video-url",
        "api-reference/ingest-assets/ingest-image-url"
      ]
    },
    {
      "group": "Entities",
      "pages": [
        {
          "group": "Taxonomy",
          "pages": [
            "api-reference/taxonomy-entities/list-taxonomies",
            "api-reference/taxonomy-entities/create-taxonomy",
            "api-reference/taxonomy-entities/get-taxonomy",
            "api-reference/taxonomy-entities/delete-taxonomy",
            "api-reference/taxonomy-entities/update-taxonomy",
            "api-reference/taxonomy-entities/get-taxonomy-node",
            "api-reference/taxonomy-entities/update-node",
            "api-reference/taxonomy-entities/classify-features-against-taxonomy",
            "api-reference/taxonomy-entities/list-taxonomy-classifications",
            "api-reference/taxonomy-entities/delete-classifications"
          ]
        }
      ]
    },
    {
      "group": "Assets",
      "pages": [
        "api-reference/assets/get-asset",
        "api-reference/assets/full-asset-update",
        "api-reference/assets/delete-asset",
        "api-reference/assets/partial-asset-update",
        "api-reference/assets/get-asset-with-features",
        "api-reference/assets/list-assets",
        "api-reference/assets/search-assets"
      ]
    },
    {
      "group": "Collections",
      "pages": [
        "api-reference/collections/list-collections",
        "api-reference/collections/create-collection",
        "api-reference/collections/get-collection",
        "api-reference/collections/update-collection",
        "api-reference/collections/delete-collection"
      ]
    },
    {
      "group": "Namespaces",
      "pages": [
        "api-reference/namespaces/list-namespaces",
        "api-reference/namespaces/create-namespace",
        "api-reference/namespaces/get-namespace",
        "api-reference/namespaces/update-namespace",
        "api-reference/namespaces/delete-namespace",
        "api-reference/namespaces/list-available-models"
      ]
    },
    {
      "group": "Feature Extractors",
      "pages": [
        "api-reference/feature-extractors/extract-embeddings"
      ]
    },
    {
      "group": "Tasks",
      "pages": [
        "api-reference/tasks/get-task-information",
        "api-reference/tasks/kill-task"
      ]
    },
    {
      "group": "Changelog",
      "pages": [
        "changelog/overview"
      ]
    }
  ],
  "footerSocials": {
    "website": "https://mixpeek.com/",
    "github": "https://github.com/mixpeek"
  },
  "backgroundImage": "/images/background.png",
  "redirects": [
    {
      "source": "/ingestion/entities/taxonomies",
      "destination": "/entities/taxonomies"
    }
  ]
}